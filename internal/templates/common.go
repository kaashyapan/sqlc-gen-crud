
// Code generated by qtc from "pg.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line pg.qtpl:1
package templates

//line pg.qtpl:1
import (
	"github.com/kaashyapan/sqlc-gen-crud/internal/core"
	"github.com/tabbed/sqlc-go/sdk"
	"strings"
)
func getIdField(prefix string, fields []core.Field) string {
	//check prefix_id
	for _, f := range fields {
		sample1 := strings.ToLower(prefix) + "_id"
		sample2 := strings.ToLower(prefix) + "Id"
		if !f.Type.IsNull && f.Name == sample1 {
			return f.Name
		}
		if !f.Type.IsNull && f.Name == sample2 {
			return f.Name
		}
	}
	return "id"
}

func skipIdField(id string, fields []core.Field) []core.Field {
	out := []core.Field{}

	for _, f := range fields {
		if f.Name != id {
			out = append(out, f)
		}
	}
	return out
}


func toTitle(str string) string {
	return sdk.Title(str)
}

func keyIsInt(prefix string, fields []core.Field) bool {
	for _, f := range fields {
		sample1 := strings.ToLower(prefix) + "_id"
		sample2 := strings.ToLower(prefix) + "Id"
		if !f.Type.IsNull && f.Name == sample1 {
			return !f.Type.IsUUID()
		}
		if !f.Type.IsNull && f.Name == sample2 {
			return !f.Type.IsUUID()
		}
		if !f.Type.IsNull && f.Name == "id" {
			return !f.Type.IsUUID()
		}
	}
	return true
}
